// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//////////////////////////////////
// Hotel Groups (ملاك/مجموعة فنادق)
//////////////////////////////////
model HotelGroup {
  id         String     @id @default(cuid())
  name       String
  owner      User       @relation("OwnerHotelGroups", fields: [ownerId], references: [id])
  ownerId    String
  properties Property[]
  guests     Guest[]    @relation("HotelGroupGuests")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  company   Company? @relation("CompanyGroups", fields: [companyId], references: [id])
  companyId String?
}

//////////////////////////////////
// Properties (Hotels)
//////////////////////////////////
model Property {
  id                 String      @id @default(cuid())
  code               String      @unique
  name               String
  timezone           String
  currency           String
  hotelGroup         HotelGroup? @relation(fields: [hotelGroupId], references: [id])
  hotelGroupId       String? // مؤقتًا nullable لتجنب مشاكل الترحيل
  logo               String? // شعار الفندق
  email              String?
  phone              String?
  address            String?
  checkInTime        String? // صيغة HH:mm
  checkOutTime       String? // صيغة HH:mm
  cancellationPolicy String?
  depositPolicy      String?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt

  rooms        Room[]
  roomTypes    RoomType[]
  bookings     Booking[]
  users        User[]
  ratePlans    RatePlan[]
  housekeeping HousekeepingTask[]
  companies    Company[]
  inventory    Inventory[]
  guests       Guest[]
  auditLogs    AuditLog[]
  groups       GroupMaster[]
  roomBlocks   RoomBlock[]
  POSOutlets  POSOutlet[]
  dailySnapshots DailySnapshot[]
  maintenanceTasks MaintenanceTask[]
  cityLedgerAccounts CityLedgerAccount[]
}

//////////////////////////////////
// Room Types & Rooms
//////////////////////////////////
model RoomType {
  id          String      @id @default(cuid())
  property    Property    @relation(fields: [propertyId], references: [id])
  propertyId  String
  code        String
  name        String
  capacity    Int
  basePrice   Decimal
  description String?
  amenities   String? // قائمة الخدمات داخل الغرفة
  rooms       Room[]
  ratePlans   RatePlan[]
  inventory   Inventory[]

  roomBlocks RoomBlock[]

  bookings  Booking[] @relation("BookingRoomType")
  company   Company?  @relation("CompanyRoomTypes", fields: [companyId], references: [id])
  companyId String?

  @@unique([propertyId, code])
}

model Room {
  id                String             @id @default(cuid())
  property          Property           @relation(fields: [propertyId], references: [id])
  propertyId        String
  number            String
  roomType          RoomType           @relation(fields: [roomTypeId], references: [id])
  roomTypeId        String
  status            String             @default("VACANT") // VACANT, OCCUPIED, CLEANING, MAINTENANCE
  floor             Int?
  notes             String?
  logs              RoomStatusLog[]
  bookings          Booking[]
  housekeepingTasks HousekeepingTask[]

  inventories Inventory[] // هذا الحقل العكسي

  maintenanceTasks MaintenanceTask[]


  @@unique([propertyId, number])
}

model RoomStatusLog {
  id          String   @id @default(cuid())
  room        Room     @relation(fields: [roomId], references: [id])
  roomId      String
  oldStatus   String
  newStatus   String
  changedBy   User     @relation(fields: [changedById], references: [id])
  changedById String
  changedAt   DateTime @default(now())
}

//////////////////////////////////
// Guests
//////////////////////////////////
model Guest {
  id             String      @id @default(cuid())
  property       Property?   @relation(fields: [propertyId], references: [id])
  propertyId     String? // مؤقتًا nullable لتجنب مشاكل الترحيل
  hotelGroup     HotelGroup? @relation("HotelGroupGuests", fields: [hotelGroupId], references: [id])
  hotelGroupId   String?
  firstName      String
  lastName       String
  phone          String?
  nationality    String?
  passportNumber String?
  dateOfBirth    DateTime?
  email          String?
  bookings       Booking[]
  folios         Folio[]
  extras         Extra[] // الحقل العكسي

  leaderOfGroups GroupMaster[] @relation("GroupLeader")
  preferences GuestPreference[]
  loyaltyPrograms LoyaltyProgram[]
  posCharges  POSCharge[]
}

//////////////////////////////////
// Bookings / Reservations
//////////////////////////////////
model Booking {
  id              String    @id @default(cuid())
  property        Property  @relation(fields: [propertyId], references: [id])
  propertyId      String
  guest           Guest?     @relation(fields: [guestId], references: [id])
  guestId         String?
  room            Room?     @relation(fields: [roomId], references: [id])
  roomId          String?
  checkIn         DateTime
  checkOut        DateTime
  status          String    @default("Booked") // Booked, InHouse, CheckedOut, NoShow
  ratePlan        RatePlan? @relation(fields: [ratePlanId], references: [id])
  ratePlanId      String?
  adults          Int
  children        Int
  specialRequests String?
  folio           Folio?

  roomType   RoomType? @relation("BookingRoomType", fields: [roomTypeId], references: [id])
  roomTypeId String?

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  company     Company?     @relation(fields: [companyId], references: [id])
  companyId   String?
  group       GroupMaster? @relation(fields: [groupId], references: [id])
  groupId     String?
  roomBlock   RoomBlock?   @relation("BookingRoomBlock", fields: [roomBlockId], references: [id])
  roomBlockId String?
  extras      Extra[] // هذا هو الحقل العكسي
}

//////////////////////////////////
// Rate Plans & Rules
//////////////////////////////////
model RatePlan {
  id         String   @id @default(cuid())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  roomTypeId String
  code       String
  name       String
  type       String   @default("Standard")
  basePrice  Decimal
  currency   String
  isPublic   Boolean  @default(true)
  mealPlan   String? // Room Only, BB, HB, FB, All Inclusive

  parentRatePlan   RatePlan?  @relation("DerivedRates", fields: [parentRatePlanId], references: [id])
  parentRatePlanId String?
  derivedRates     RatePlan[] @relation("DerivedRates") // العلاقة المعاكسة

  rateRules      RateRule[]          @relation("RatePlanRules")
  occupancyRates RatePlanOccupancy[]
  policies       RatePlanPolicy[]
  extras         RatePlanExtra[]
  bookings       Booking[]

  @@unique([propertyId, code])
}

model RateRule {
  id         String   @id @default(cuid())
  ratePlanId String
  ratePlan   RatePlan @relation("RatePlanRules", fields: [ratePlanId], references: [id])

  startDate             DateTime?
  endDate               DateTime?
  priceOverride         Float?
  minLOS                Int?
  maxLOS                Int?
  minOccupancy          Int?
  maxOccupancy          Int?
  closedToArrival       Boolean   @default(false)
  closedToDeparture     Boolean   @default(false)
  policy                String?
  mealPlan              String?
  isPublic              Boolean   @default(true)
  derivedFromRatePlanId String?
  seasonName            String?
  blackout              Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RatePlanOccupancy {
  id         String   @id @default(cuid())
  ratePlanId String
  ratePlan   RatePlan @relation(fields: [ratePlanId], references: [id])

  occupancy Int
  price     Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RatePlanPolicy {
  id          String   @id @default(cuid())
  ratePlan    RatePlan @relation(fields: [ratePlanId], references: [id])
  ratePlanId  String
  type        String // مثال: Cancellation, Payment, Guarantee
  description String
}

model RatePlanExtra {
  id          String   @id @default(cuid())
  ratePlan    RatePlan @relation(fields: [ratePlanId], references: [id])
  ratePlanId  String
  name        String
  price       Decimal
  description String?
}

//////////////////////////////////
// Inventory (عدد الغرف المتاحة يومياً لكل RoomType)
//////////////////////////////////
model Inventory {
  id         String   @id @default(cuid())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  roomTypeId String
  room       Room?    @relation(fields: [roomId], references: [id])
  roomId     String?
  date       DateTime
  allotment  Int
  sold       Int      @default(0)
  stopSell   Boolean  @default(false)

  housekeeping String? // ⬅ حقل اختياري
  notes        String? // ⬅ حقل اختياري
  extraPrices  Json?

  @@unique([propertyId, roomTypeId, roomId, date], name: "inventory_unique") // مفتاح فريد موحد
}

//////////////////////////////////
// Housekeeping
//////////////////////////////////
model HousekeepingTask {
  id           String    @id @default(cuid())
  room         Room      @relation(fields: [roomId], references: [id])
  roomId       String
  type         String
  status       String    @default("Open")
  assignedTo   User?     @relation(fields: [assignedToId], references: [id])
  assignedToId String?
  priority     String?
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  property     Property? @relation(fields: [propertyId], references: [id])
  propertyId   String? // مؤقتًا nullable لتجنب مشاكل الترحيل
}

//////////////////////////////////
// Folio / Billing
//////////////////////////////////
model Folio {
  id          String       @id @default(cuid())
  booking     Booking?      @relation(fields: [bookingId], references: [id])
  bookingId   String?       @unique
  guest       Guest?        @relation(fields: [guestId], references: [id])
  guestId     String?
  group       GroupMaster? @relation(fields: [groupId], references: [id])
  groupId     String?
  roomBlock   RoomBlock?   @relation(fields: [roomBlockId], references: [id])
  roomBlockId String?
  status      String       @default("Open") // Open, Closed
  charges     Charge[]
  payments    Payment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  extras      Extra[] // الحقل العكسي
  company     Company?     @relation("CompanyFolios", fields: [companyId], references: [id])
  companyId   String?
  posCharges POSCharge[]
  cityLedgerAccount CityLedgerAccount? @relation(fields: [cityLedgerAccountId], references: [id])
  cityLedgerAccountId String?
  sales  POSSale[]

}

model Charge {
  id          String   @id @default(cuid())
  folio       Folio    @relation(fields: [folioId], references: [id])
  folioId     String
  code        String
  description String
  amount      Decimal
  tax         Decimal?
  postedAt    DateTime @default(now())
  postedBy    User     @relation(fields: [postedById], references: [id])
  postedById  String
}

model Payment {
  id         String   @id @default(cuid())
  folio      Folio    @relation(fields: [folioId], references: [id])
  folioId    String
  method     String
  amount     Decimal
  ref        String?
  postedAt   DateTime @default(now())
  postedBy   User     @relation(fields: [postedById], references: [id])
  postedById String

  cityLedgerAccount      CityLedgerAccount?  @relation(fields: [cityLedgerAccountId], references: [id])
  cityLedgerAccountId    String?
}

//////////////////////////////////
// Companies / Contracts
//////////////////////////////////
model Company {
  id            String   @id @default(cuid())
  property      Property @relation(fields: [propertyId], references: [id])
  propertyId    String
  code          String
  name          String
  creditLimit   Decimal?
  rateAgreement String?

  bookings     Booking[]
  folios       Folio[]       @relation("CompanyFolios")
  groups       HotelGroup[]  @relation("CompanyGroups")
  groupMasters GroupMaster[] @relation("CompanyGroups")
  roomBlocks   RoomBlock[]   @relation("CompanyRoomBlocks")
  roomTypes    RoomType[]    @relation("CompanyRoomTypes")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cityLedgerAccounts CityLedgerAccount[]

  @@unique([propertyId, code])
}

//////////////////////////////////
// Users / Roles
//////////////////////////////////
model User {
  id               String             @id @default(cuid())
  property         Property           @relation(fields: [propertyId], references: [id])
  propertyId       String
  email            String             @unique
  password         String
  name             String
  role             String             @default("FrontDesk") // Admin, FrontDesk, HK, Manager, Owner
  active           Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  RoomStatusLog    RoomStatusLog[]
  HousekeepingTask HousekeepingTask[]
  Charge           Charge[]
  Payment          Payment[]
  AuditLog         AuditLog[]

  hotelGroupsOwned HotelGroup[] @relation("OwnerHotelGroups")
  posChargesPosted POSCharge[]
  maintenanceTasksAssigned MaintenanceTask[]
  sales  POSSale[]
}

//////////////////////////////////
// Extras / Add-ons
//////////////////////////////////
model Extra {
  id String @id @default(cuid())

  // علاقة مع Booking
  booking   Booking @relation(fields: [bookingId], references: [id])
  bookingId String

  // علاقة مع Guest (اختياري)
  guest   Guest?  @relation(fields: [guestId], references: [id])
  guestId String?

  // بيانات الخدمة
  name        String
  description String?
  unitPrice   Decimal
  quantity    Int      @default(1)
  tax         Decimal?
  status      String   @default("Unpaid")
  active      Boolean  @default(true)

  // ربط Folio (اختياري)
  folio   Folio?  @relation(fields: [folioId], references: [id])
  folioId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//////////////////////////////////
// Audit Logs
//////////////////////////////////
model AuditLog {
  id         String   @id @default(cuid())
  actor      User     @relation(fields: [actorId], references: [id])
  actorId    String
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  action     String
  metadata   Json?
  createdAt  DateTime @default(now())
}

model NightAudit {
  id         String   @id @default(cuid())
  propertyId String
  closedDate String
  closedById String
  createdAt  DateTime @default(now())
}

model PaymentMethod {
  id        String   @id @default(cuid())
  name      String
  code      String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SystemSetting {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

//////////////////////////////////
// Groups (Conferences, Events, Tours)
//////////////////////////////////
model GroupMaster {
  id         String   @id @default(cuid())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  company    Company? @relation("CompanyGroups", fields: [companyId], references: [id])
  companyId  String?
  leader     Guest?   @relation("GroupLeader", fields: [leaderId], references: [id])
  leaderId   String?

  code        String  @unique
  name        String
  description String?
  billingInstruction String?

  status    String    @default("Active") // Active, Closed, Cancelled
  startDate DateTime?
  endDate   DateTime?

  roomBlocks RoomBlock[]
  bookings   Booking[] // الحجوزات المرتبطة بالمجموعة
  folios     Folio[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model RoomBlock {
  id         String      @id @default(cuid())
  group      GroupMaster @relation(fields: [groupId], references: [id])
  groupId    String
  company    Company?    @relation("CompanyRoomBlocks", fields: [companyId], references: [id])
  companyId  String?
  roomType   RoomType    @relation(fields: [roomTypeId], references: [id])
  roomTypeId String
  property   Property    @relation(fields: [propertyId], references: [id])
  propertyId String

  blockDate    DateTime
  roomsBlocked Int
  roomsPicked  Int      @default(0)

  bookings Booking[] @relation("BookingRoomBlock")
  folios   Folio[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  Admin
  FrontDesk
  HK
  Manager
  Owner
}


//////////////////////////////////
// POS / Outlets / Charges
//////////////////////////////////
model POSOutlet {
  id         String   @id @default(cuid())
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
  name       String
  type       String   // Restaurant, Bar, Spa, etc.
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  charges    POSCharge[]
  items      POSItem[]
  sales       POSSale[]
}

model POSCharge {
  id         String     @id @default(cuid())
  outlet     POSOutlet  @relation(fields: [outletId], references: [id])
  outletId   String
  folio      Folio?     @relation(fields: [folioId], references: [id])
  folioId    String?
  guest      Guest?     @relation(fields: [guestId], references: [id])
  guestId    String?
  description String
  amount     Decimal
  tax        Decimal?
  postedAt   DateTime   @default(now())
  postedBy   User       @relation(fields: [postedById], references: [id])
  postedById String
}

model POSItem {
  id         String    @id @default(cuid())
  outlet     POSOutlet @relation(fields: [outletId], references: [id])
  outletId   String
  code       String    
  name       String
  description String?
  price      Decimal
  tax        Decimal?  
  active     Boolean   @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales POSSaleItem[]
}


//////////////////////////////////
// City Ledger / Accounts Receivable
//////////////////////////////////
model CityLedgerAccount {
  id          String   @id @default(cuid())
  property    Property @relation(fields: [propertyId], references: [id])
  propertyId  String
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  balance     Decimal  @default(0)
  creditLimit Decimal?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  code      String
  name      String

  folios      Folio[]  // folios linked to this account
  payments    Payment[]
}

//////////////////////////////////
// Maintenance Tasks
//////////////////////////////////
model MaintenanceTask {
  id           String    @id @default(cuid())
  room         Room      @relation(fields: [roomId], references: [id])
  roomId       String
  type         String    // Plumbing, Electrical, HVAC, etc.
  status       String    @default("Open") // Open, InProgress, Closed
  priority     String?   // Low, Medium, High
  assignedTo   User?     @relation(fields: [assignedToId], references: [id])
  assignedToId String?
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  property     Property? @relation(fields: [propertyId], references: [id])
  propertyId   String?
}

//////////////////////////////////
// Guest Preferences & Loyalty
//////////////////////////////////
model GuestPreference {
  id            String   @id @default(cuid())
  guest         Guest    @relation(fields: [guestId], references: [id])
  guestId       String
  preferenceKey String   // Non-smoking, FloorHigh, BedType, etc.
  preferenceVal String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model LoyaltyProgram {
  id           String   @id @default(cuid())
  guest        Guest    @relation(fields: [guestId], references: [id])
  guestId      String
  programName  String   // Example: Gold, Silver, Platinum
  points       Int      @default(0)
  tier         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

//////////////////////////////////
// Reports / BI Snapshots
//////////////////////////////////
model DailySnapshot {
  id           String    @id @default(cuid())
  property     Property  @relation(fields: [propertyId], references: [id])
  propertyId   String
  date         DateTime
  occupancy    Int
  roomsSold    Int
  adr          Float     // Average Daily Rate
  revpar       Float     // Revenue per Available Room
  totalRevenue Decimal
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([propertyId, date])
}

model POSSale {
  id        String      @id @default(cuid())
  outlet    POSOutlet   @relation(fields: [outletId], references: [id])
  outletId  String
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  folio     Folio?      @relation(fields: [folioId], references: [id])
  folioId   String?
  total     Decimal
  tax       Decimal
  createdAt DateTime    @default(now())


  items     POSSaleItem[]

}

model POSSaleItem {
  id       String    @id @default(cuid())
  sale     POSSale   @relation(fields: [saleId], references: [id])
  saleId   String
  item     POSItem   @relation(fields: [itemId], references: [id])
  itemId   String
  name     String?
  quantity Int
  price    Decimal
  tax      Decimal
  subtotal Decimal

}